<?php

/**
* Implements hook_cron()
*/

function thought_quantifier_cron() {
	$cron_last = variable_get('cron_last');
	if (date('ymd', $cron_last) != date('ymd', time())) {
  		// Load thoughts and process through Prophet Mind
  		variable_set('cron_last', date('ymd', time()));
	}  
}

/**
* Implements hook_block_info()
*/

function thought_quantifier_block_info() {

  $blocks = array();

  $blocks['thought_quantifier_block'] = array(
    'info' => t('Temporary block to debug and build thought quantification'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;

}

/**
* Implements hook_block_view().
*/

function thought_quantifier_block_view($delta = '') {

  $block = array();

  switch ($delta) {
    case 'thought_quantifier_block':
      $block['subject'] = '';
      $block['content'] = drupal_get_form('thought_quantifier_form');
      break;
  }

  return $block;

}

/**
 * Define the form to be returned.
 */

function thought_quantifier_form($form, &$form_state) {

  # Submit Button
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Process Thoughts'),
    '#submit' => array('thought_quantifier_form_submit'),
  );
  
  return $form;
  
}

/**
 * Run code to make calls to Prophet Mind
 */

function thought_quantifier_form_submit($form, &$form_state) {

  # Get Thoughts from Database
  $query = db_select('node', 'n');
  $query->condition('n.type', 'thought', '=')->fields('n', array('title', 'uid', 'created'));
  #$query->condition('created', array(strtotime("yesterday 0:00"), strtotime("today 0:00")), 'BETWEEN');
  $result = $query->execute();
  foreach ($result as $record) {
      dpm($record);
  }

  # Send Thoughts to Prophet Mind
  $url = 'http://localhost:443/wordstream/';
  $data = ''
  $options = array(
      'http' => array(
          'header'  => "Content-type: application/x-www-form-urlencoded\r\n",
          'method'  => 'POST',
          'content' => http_build_query($data),
      ),
  );

  $context  = stream_context_create($options);
  $result = file_get_contents($url, false, $context);

  # Store Result In WordCount Table

}
